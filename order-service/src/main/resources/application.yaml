spring:
# DB properties
  datasource:
    driver-class-name: org.postgresql.Driver
    url: jdbc:postgresql://localhost:5000/order-service
    username: username
    password: password
  jpa:
    hibernate:
      ddl-auto: update
  application:
    name: order-service

# Kafka properties
  kafka:
    bootstrap-servers: localhost:9092
    template:
      default-topic: notificationTopic
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      properties:
        spring.json.type.mapping: event:com.reskov.microservice.orderservice.event.OrderCreatedEvent

# Application port
server:
  port: 8081

# Eureka properties
eureka:
  client:
    service-url:
      defaultZone: http://username:password@localhost:8761/eureka

# Actuator properties
management:
  health:
    circuitbreakers:
      enabled: true
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: always
  tracing:
    sampling:
      probability: 1.0

# Resilience4j properties
resilience4j.circuitbreaker:
  instances:
    inventory:
      registerHealthIndicator: true
      event-consumer-buffer-size: 10
      slidingWindowType: COUNT_BASED
      slidingWindowSize: 5
      failureRateThreshold: 50
      waitDurationInOpenState: 5s
      permittedNumberOfCallsInHalfOpenState: 3
      automaticTransitionFromOpenToHalfOpenEnabled: true
      ignoreExceptions:
        - com.reskov.microservice.orderservice.exception.NotFoundException
        - com.reskov.microservice.orderservice.exception.ProductNotInStockException
      recordExceptions:
        - com.reskov.microservice.orderservice.exception.ExternalServiceUnavailableException
